plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.leocalheiros'
version = '0.0.1-SNAPSHOT'

def profile = findProperty('spring.profiles.active') ?: System.getProperty('spring.profiles.active', 'default')

bootRun {
    systemProperty 'spring.profiles.active', profile
    manifest {
        attributes(
                'Implementation-Version': version
        )
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2023.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'com.azure:azure-messaging-servicebus:7.13.3'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Resilience4j core module
    implementation 'io.github.resilience4j:resilience4j-core:2.2.0'
    // CircuitBreaker module
    implementation 'io.github.resilience4j:resilience4j-circuitbreaker:2.2.0'
    // Retry module
    implementation 'io.github.resilience4j:resilience4j-retry:2.2.0'

    // Vavr module (opcional, usado para Try, Option, etc.)
    implementation 'io.vavr:vavr:0.10.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
